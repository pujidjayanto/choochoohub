name: Go - User API

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-user-api:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: ci_user
          POSTGRES_PASSWORD: ci_password
          POSTGRES_DB: user_api_test
        ports:
          - 5432:5432

    defaults:
      run:
        working-directory: user-api

    steps:
      - uses: actions/checkout@v4

      - name: Copy CI env file
        run: cp .env.ci .env

      # Set up Go with caching
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.5'
          cache-dependency-path: go.sum

      - name: Download Dependencies
        run: go mod download

      - name: Run Go Linter
        uses: golangci/golangci-lint-action@v5
        with:
          version: v1.58.1
          working-directory: user-api
          args: --timeout 5m

      - name: Install Goose
        run: go install github.com/pressly/goose/v3/cmd/goose@latest

      - name: Run database migrations with Goose
        run: |
          if [ -f ".env" ]; then
            set -a
            source .env
            set +a
          else
            echo ".env file not found. Ensure the 'Copy CI env file' step ran correctly."
            exit 1
          fi

          DB_CONN_STRING="user=${TEST_DB_USER} password=${TEST_DB_PASSWORD} host=${TEST_DB_HOST} port=${TEST_DB_PORT} dbname=${TEST_DB_NAME} sslmode=${TEST_DB_SSL_MODE}"

          ~/go/bin/goose postgres "$DB_CONN_STRING" up -dir migrations

      - name: Run Tests
        run: go test -v ./...
