// Code generated by MockGen. DO NOT EDIT.
// Source: ./usecase/signup.go
//
// Generated by this command:
//
//	mockgen -source=./usecase/signup.go -package=mocks -destination=./mocks/mock_signup_usecase.go
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	dto "github.com/pujidjayanto/choochoohub/user-api/dto"
	gomock "go.uber.org/mock/gomock"
)

// MockSignUpUsecase is a mock of SignUpUsecase interface.
type MockSignUpUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockSignUpUsecaseMockRecorder
	isgomock struct{}
}

// MockSignUpUsecaseMockRecorder is the mock recorder for MockSignUpUsecase.
type MockSignUpUsecaseMockRecorder struct {
	mock *MockSignUpUsecase
}

// NewMockSignUpUsecase creates a new mock instance.
func NewMockSignUpUsecase(ctrl *gomock.Controller) *MockSignUpUsecase {
	mock := &MockSignUpUsecase{ctrl: ctrl}
	mock.recorder = &MockSignUpUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSignUpUsecase) EXPECT() *MockSignUpUsecaseMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockSignUpUsecase) Create(c context.Context, req dto.SignupRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", c, req)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockSignUpUsecaseMockRecorder) Create(c, req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockSignUpUsecase)(nil).Create), c, req)
}
